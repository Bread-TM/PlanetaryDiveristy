#PD AW Decisions

###Tree of Life
#Transplanet Tree TOL
decision_pd_aw_replant_tree_of_life = {
	owned_planets_only = yes
	sound = event_mystic_reveal
	icon = decision_pd_aw_replant_tree_of_life

	enactment_time = 360

	resources = {
		category = decisions
		cost = {
			food = 1000
		}
	}

	potential = {
		has_modifier = pd_aw_no_lifetree
		OR = {
			is_planet_class = pc_habitat
			is_planet_class = pc_ringworld_habitable
			habitable_planet_not_urban = yes
		}
	}

	allow = {
		has_modifier = pd_aw_no_lifetree
		OR = {
			is_planet_class = pc_habitat
			is_planet_class = pc_ringworld_habitable
			habitable_planet_not_urban = yes
		}
	}

	effect = {
		remove_modifier = pd_aw_no_lifetree
		hidden_effect = {
			add_deposit = d_pd_aw_tree_of_life_colony
			switch = {
				trigger = is_planet_class
				pc_habitat = {
					planet_event = {
						id = pdtreeoflifeaw.21
						days = 2160
					}
					add_modifier = { modifier = pd_aw_tree_of_life_growing days = 2160 }
				}
				pc_ringworld_habitable = {
					planet_event = { id = pdtreeoflifeaw.21 days = 9000 }
					add_modifier = {
						modifier = pd_aw_tree_of_life_growing
						days = 9000
					}
				}
				pc_continental = {
					planet_event = { id = pdtreeoflifeaw.21 days = 9000 }
					add_modifier = {
						modifier = pd_aw_tree_of_life_growing
						days = 9000
					}
				}
				pc_tropical = {
					planet_event = { id = pdtreeoflifeaw.21 days = 9000 }
					add_modifier = {
						modifier = pd_aw_tree_of_life_growing
						days = 9000
					}
				}
				pc_ocean = {
					planet_event = { id = pdtreeoflifeaw.21 days = 9000 }
					add_modifier = {
						modifier = pd_aw_tree_of_life_growing
						days = 9000
					}
				}
				default = {
					planet_event = { id = pdtreeoflifeaw.21 days = 18000 }
					add_modifier = {
						modifier = pd_aw_tree_of_life_growing
						days = 18000
					}
				}
			}
			remove_modifier = pd_aw_no_lifetree #as the planet transfer events fire before this
		}
	}

	ai_weight = {
		weight = 1000
	}
}

#Bloom Megaflora Hive
decision_pd_aw_bloom_tree_of_life = {
	owned_planets_only = yes
	sound = event_mystic_reveal
	icon = decision_pd_aw_bloom_tree_of_life

	enactment_time = 3600

	resources = {
		category = decisions
		cost = {
			influence = 200
			food = 20000
		}
	}

	potential = {
		has_modifier = pd_aw_tree_of_life_home
		has_deposit = d_pd_aw_tree_of_life_home
		owner = {
			has_ascension_perk = ap_pd_tree_of_life_bloomed
		}
		habitable_planet_not_urban = yes
	}

	effect = {
		custom_tooltip = decision_pd_aw_bloom_tree_of_life_tooltip
		hidden_effect = {
			add_modifier = {
				modifier = pd_aw_tree_of_life_bloomed
				days = -1
			}
			add_deposit = d_pd_aw_tree_of_life_bloomed
			remove_modifier = pd_aw_tree_of_life_home
			remove_deposit = d_pd_aw_tree_of_life_home
			change_pc = pc_gaia
			set_planet_entity = {
				picture = pc_pd_megaflora_hive_bloomed
				entity = megafloratol_bloomed_planet_01_entity
			}
		}
	}

	ai_weight = {
		weight = 1000
	}
}

###Flooded/Aquatic Worlds
@expand_planetary_sea_length = 1800
decision_pd_aw_flood_planet = {
	owned_planets_only = yes
	icon = decision_pd_flooding_aw

	enactment_time = @expand_planetary_sea_length

	potential = {
		OR = {
			is_planet_class = pc_ocean
			is_planet_class = pc_gaia
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		exists = owner
		owner = {
			has_ascension_perk = ap_hydrocentric
		}
		NOR = {
			has_modifier = flooded_habitat
			has_modifier = ocean_paradise_2
			has_modifier = ocean_paradise_hive_2
			has_planet_flag = pd_unique_world
			pd_aw_is_wasteland_planet = yes
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = requires_free_ice_mining_station
			owner = {
				any_owned_starbase = {
					has_starbase_building = ice_mining_station
					solar_system = {
						NOT = { has_star_flag = ice_mining_in_progress }
					}
				}
			}
		}
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 2000
		}
	}

	on_queued = {
		set_variable = {
			which = decision_length
			value = @expand_planetary_sea_length
		}
		export_modifier_to_variable = {
			modifier = planet_decision_enact_speed_mult
			variable = decision_mult_var
		}
		change_variable = {
			which = decision_mult_var
			value = 1
		}
		divide_variable = {
			which = decision_length
			value = decision_mult_var
		}
		change_variable = { #ideally, may as well refer to this in the final effect
			which = decision_length
			value = 1
		}

		owner = {
			random_owned_starbase = {
				limit = {
					has_starbase_building = ice_mining_station
					solar_system = {
						NOT = { has_star_flag = ice_mining_in_progress }
					}
				}
				solar_system = {
					set_timed_star_flag = {
						flag = ice_mining_in_progress
						days = root.decision_length
					}
					set_timed_star_flag = {
						flag = ice_mining@root
						days = root.decision_length
					}
				}
			}
		}
		clear_variable = decision_length
		clear_variable = decision_mult_var
	}

	abort_trigger = {
		NOT = {
			owner = {
				any_owned_starbase = {
					has_starbase_building = ice_mining_station
				}
			}
		}
	}

	on_unqueued = {
		owner = {
			random_owned_starbase = {
				limit = {
					solar_system = {
						has_star_flag = ice_mining@root
					}
				}
				solar_system = {
					remove_star_flag = ice_mining@root
					remove_star_flag = ice_mining_in_progress
				}
			}
		}
	}

	abort_effect = {
		owner = {
			random_owned_starbase = {
				limit = {
					solar_system = {
						has_star_flag = ice_mining@root
					}
				}
				solar_system = {
					remove_star_flag = ice_mining@root
					remove_star_flag = ice_mining_in_progress
				}
			}
		}
		create_message = {
			type = ICE_MINING_INTERRUPTED
			localization = ICE_MINING_INTERRUPTED_HABITAT_DESC
			days = 20
			target = root
		}
	}

	effect = {
		custom_tooltip = decision_pd_aw_flood_planet_tooltip
		hidden_effect = {
			IF = {
				limit = {
					NOR = {
						has_modifier = ocean_paradise
						has_modifier = ocean_paradise_hive
					}
				}
				add_modifier = {
					modifier = flooded_habitat
					days = -1
				}
			}
			IF = {
				limit = {
					has_modifier = ocean_paradise
				}
				remove_modifier = ocean_paradise
				add_modifier = {
					modifier = ocean_paradise_2
					days = -1
				}
			}
			IF = {
				limit = {
					has_modifier = ocean_paradise_hive
				}
				remove_modifier = ocean_paradise_hive
				add_modifier = {
					modifier = ocean_paradise_hive_2
					days = -1
				}
			}
			hidden_effect = {
				IF = {
					limit = {
						NOT = {	has_modifier = pd_aw_shroud_planet }
					}
					IF = {
						limit = {
							is_planet_class = pc_ocean
						}
						set_planet_entity = {
							picture = pc_aquatic
							entity = aquatic_planet_01_entity
						}
						pd_remove_ocean_modifiers = yes
					}
					IF = {
						limit = {
							OR = {
								has_modifier = ocean_paradise_2
								has_modifier = ocean_paradise_hive_2
							}
						}
						set_planet_entity = {
							picture = pc_aquatic
							entity = ocean_paradise_planet_01_entity
						}
						pd_remove_ocean_modifiers = yes
					}
					IF = {
						limit = {
							is_planet_class = pc_gaia
						}
						set_planet_entity = {
							picture = pc_aquatic_hot
							entity = ocean_paradise_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_city
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_city
							entity = aquaticcity_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_relic
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_relic
							entity = pd_aquatic_relic_world_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_hive
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_hive
							entity = pd_aquatic_infested_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_machine
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_machine
							entity = pd_aquatic_machine_planet_01_entity
						}
					}
				}
				IF = {
					limit = {
						has_modifier = pd_aw_shroud_planet
					}
					IF = {
						limit = {
							is_planet_class = pc_ocean
						}
						set_planet_entity = {
							picture = pc_aquatic_shroud
							entity = aquatic_shroud_planet_01_entity
						}
						pd_remove_ocean_modifiers = yes
					}
					IF = {
						limit = {
							is_planet_class = pc_gaia
						}
						set_planet_entity = {
							picture = pc_aquatic_shroud_hot
							entity = ocean_paradise_shroud_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_city
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_shroud_city
							entity = aquatic_shroudcity_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_relic
						}
						set_planet_entity = {
							picture = pc_pd_aquatic_shroud_relic
							entity = pdaquatic_shroudrelic_planet_01_entity
						}
					}
				}
			}

			ice_mining_depletion_effect = yes
			if = {
				limit = {
					has_planet_flag = temp_ice_mine_exhausted_flag
				}
				event_target:mined_system.starbase = {
					remove_starbase_building = {
						building = ice_mining_station
					}
				}
				create_message = {
					type = ICE_MINING_PLANET_SUCCESS
					localization = ICE_MINING_HABITAT_SUCCESS_BUT_EXHAUSTED_DESC
					days = 20
					target = root
					variable = {
						type = name
						localization = SYSTEM
						scope = event_target:mined_system
					}
				}
			}
			else = {
				create_message = {
					type = ICE_MINING_PLANET_SUCCESS
					localization = ICE_MINING_PLANET_SUCCESS_DESC
					days = 20
					target = root
					variable = {
						type = name
						localization = SYSTEM
						scope = event_target:mined_system
					}
				}
			}
			change_variable = {
				which = ice_dumping_happened
				value = 1
			}
		}
	}
	ai_weight = {
		weight = 1
	}
}

#Unflood Planet
decision_pd_aw_unflood_planet = {
	owned_planets_only = yes
	icon = decision_satellite_in_orbit

	enactment_time = @expand_planetary_sea_length

	potential = {
		OR = {
			is_planet_class = pc_ocean
			is_planet_class = pc_gaia
			is_planet_class = pc_city
		}
		exists = owner
		pd_is_flooded_planet = yes
		owner = {
			NOT = { has_ascension_perk = ap_hydrocentric }
		}
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		remove_modifier = flooded_habitat
		remove_modifier = ocean_paradise
		remove_modifier = ocean_paradise_2
		remove_modifier = ocean_paradise_hive
		remove_modifier = ocean_paradise_hive_2
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_modifier = pd_aw_shroud_planet
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ocean
					}
					set_planet_entity = {
						picture = pc_ocean
						entity = ocean_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_gaia
					}
					set_planet_entity = {
						picture = pc_gaia
						entity = gaia_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						entity = "city_planet_entity"
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_relic
						entity = relic_world_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_hive
					}
					set_planet_entity = {
						picture = pc_hive
						entity = infested_planet
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_machine
					}
					set_planet_entity = {
						picture = pc_machine
						entity = machine_planet
					}
				}
			}
			if = {
				limit = {
					has_modifier = pd_aw_shroud_planet
				}
				IF = {
					limit = {
						is_planet_class = pc_ocean
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_gaia
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_shroud_city
						entity = pdshroudcity_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_shroud_relic
						entity = pdshroudrelic_planet_01_entity
					}
				}
			}
		}
	}

	ai_weight = {
		weight = 100
		modifier = {
			factor = 0
			owner = {
				has_trait = trait_aquatic
			}
		}
	}
}

#Flood Ringworld
decision_pd_aw_flood_ringworld = {
	owned_planets_only = yes
	icon = decision_pd_flooding_aw

	enactment_time = @expand_planetary_sea_length

	potential = {
		is_planet_class = pc_ringworld_habitable
		exists = owner
		owner = {
			has_ascension_perk = ap_hydrocentric
		}
		NOT = {
			has_modifier = flooded_habitat
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = requires_free_ice_mining_station
			owner = {
				any_owned_starbase = {
					has_starbase_building = ice_mining_station
					solar_system = {
						NOT = { has_star_flag = ice_mining_in_progress }
					}
				}
			}
		}
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 1000
		}
	}

	on_queued = {
		set_variable = {
			which = decision_length
			value = @expand_planetary_sea_length
		}
		export_modifier_to_variable = {
			modifier = planet_decision_enact_speed_mult
			variable = decision_mult_var
		}
		change_variable = {
			which = decision_mult_var
			value = 1
		}
		divide_variable = {
			which = decision_length
			value = decision_mult_var
		}
		change_variable = { #ideally, may as well refer to this in the final effect
			which = decision_length
			value = 1
		}

		owner = {
			random_owned_starbase = {
				limit = {
					has_starbase_building = ice_mining_station
					solar_system = {
						NOT = { has_star_flag = ice_mining_in_progress }
					}
				}
				solar_system = {
					set_timed_star_flag = {
						flag = ice_mining_in_progress
						days = root.decision_length
					}
					set_timed_star_flag = {
						flag = ice_mining@root
						days = root.decision_length
					}
				}
			}
		}
		clear_variable = decision_length
		clear_variable = decision_mult_var
	}

	abort_trigger = {
		NOT = {
			owner = {
				any_owned_starbase = {
					has_starbase_building = ice_mining_station
				}
			}
		}
	}

	on_unqueued = {
		owner = {
			random_owned_starbase = {
				limit = {
					solar_system = {
						has_star_flag = ice_mining@root
					}
				}
				solar_system = {
					remove_star_flag = ice_mining@root
					remove_star_flag = ice_mining_in_progress
				}
			}
		}
	}

	abort_effect = {
		owner = {
			random_owned_starbase = {
				limit = {
					solar_system = {
						has_star_flag = ice_mining@root
					}
				}
				solar_system = {
					remove_star_flag = ice_mining@root
					remove_star_flag = ice_mining_in_progress
				}
			}
		}
		create_message = {
			type = ICE_MINING_INTERRUPTED
			localization = ICE_MINING_INTERRUPTED_HABITAT_DESC
			days = 20
			target = root
		}
	}

	effect = {
		custom_tooltip = decision_pd_aw_flood_planet_tooltip
		hidden_effect = {
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			ice_mining_depletion_effect = yes

			if = {
				limit = {
					has_planet_flag = temp_ice_mine_exhausted_flag
				}
				event_target:mined_system.starbase = {
					remove_starbase_building = {
						building = ice_mining_station
					}
				}
				create_message = {
					type = ICE_MINING_PLANET_SUCCESS
					localization = ICE_MINING_HABITAT_SUCCESS_BUT_EXHAUSTED_DESC
					days = 20
					target = root
					variable = {
						type = name
						localization = SYSTEM
						scope = event_target:mined_system
					}
				}
			}
			else = {
				create_message = {
					type = ICE_MINING_PLANET_SUCCESS
					localization = ICE_MINING_PLANET_SUCCESS_DESC
					days = 20
					target = root
					variable = {
						type = name
						localization = SYSTEM
						scope = event_target:mined_system
					}
				}
			}
			change_variable = {
				which = ice_dumping_happened
				value = 1
			}
			if = {
				limit = {
					NOT = { has_modifier = pd_aw_shroud_planet }
				}
				set_planet_entity = {
					picture = pc_aquatic
					entity = pdaquatic_ringworld_habitable_entity_01_entity
					graphical_culture = owner
				}
			}
			if = {
				limit = {
					has_modifier = pd_aw_shroud_planet
				}
				set_planet_entity = {
					picture = pc_aquatic_shroud
					entity = pdaquatic_shroud_ringworld_habitable_entity_01_entity
					graphical_culture = owner
				}
			}
		}
	}

	ai_weight = {
		weight = 100
	}
}

#Unflood Ringworld
decision_pd_aw_unflood_ringworld = {
	owned_planets_only = yes
	icon = decision_satellite_in_orbit

	enactment_time = @expand_planetary_sea_length

	potential = {
		is_planet_class = pc_ringworld_habitable
		exists = owner
		has_modifier = flooded_habitat
		# owner = {
		# 	NOT = { has_ascension_perk = ap_hydrocentric }
		# }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		remove_modifier = flooded_habitat
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_modifier = pd_aw_shroud_planet
					}
				}
				set_planet_entity = {
					entity = ringworld_habitable_entity_01_entity
					graphical_culture = owner
					picture = pc_gaia
				}
			}
			if = {
				limit = {
					has_modifier = pd_aw_shroud_planet
				}
				set_planet_entity = {
					picture = pc_pd_shroud_ring
					entity = pd_shroud_ringworld_habitable_entity_01_entity
					graphical_culture = owner
				}
			}
		}
	}

	ai_weight = {
		weight = 100
		modifier = {
			factor = 0
			owner = {
				has_trait = trait_aquatic
			}
		}
	}
}

#Unflood Habitat
decision_pd_aw_unflood_habitat = {
	owned_planets_only = yes
	icon = decision_satellite_in_orbit

	enactment_time = @expand_planetary_sea_length

	potential = {
		is_planet_class = pc_habitat
		exists = owner
		has_modifier = flooded_habitat
		owner = {
			NOT = { has_ascension_perk = ap_hydrocentric }
		}
		NOT = { has_planet_flag = pd_unique_world }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		remove_modifier = flooded_habitat
		hidden_effect = {
			set_planet_entity = {
				picture = pc_habitat
				entity = "habitat_phase_03_entity"
				graphical_culture = owner
			}
		}
	}

	ai_weight = {
		weight = 100
		modifier = {
			factor = 0
			owner = {
				has_trait = trait_aquatic
			}
		}
	}
}

###Toxic Wasteland Worlds
@pd_toxic_time = 1800
#Clean Up Toxic Wasteland
decision_pd_aw_wasteland_planet_cleanup = {
	owned_planets_only = yes
	icon = decision_resort_colony

	enactment_time = @pd_toxic_time

	potential = {
		exists = owner
		owner = {
			NOT = { has_ascension_perk = ap_pd_wasteland_worlds }
			has_technology = tech_climate_restoration
		}
		has_modifier = pd_aw_wasteland_planet
		is_starting_planet_type = yes
	}

	allow = {
		owner = { has_technology = tech_climate_restoration }
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		remove_modifier = pd_aw_wasteland_planet
		custom_tooltip = decision_pd_aw_wasteland_planet_cleanup_tooltip
		hidden_effect = {
			pd_aw_back_to_normal_view_effect = yes
			create_message = {
				type = MESSAGE_PD_AW_WASTELAND_CLEANUP_TYPE
				localization = MESSAGE_PD_AW_WASTELAND_CLEANUP_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}

#Make Wasteland
decision_pd_aw_wasteland_planet = {
	owned_planets_only = yes
	icon = decision_pd_aw_wasteland

	enactment_time = @pd_toxic_time

	potential = {
		is_starting_planet_type = yes
		exists = owner
		owner = {
			has_ascension_perk = ap_pd_wasteland_worlds
		}
		pd_is_aw_world = no
		NOT = { has_planet_flag = pd_unique_world }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		add_modifier = {
			modifier = pd_aw_wasteland_planet
			days = -1
		}
		hidden_effect = {
			IF = {
				limit = {
					is_starting_planet_type = yes
				}
				set_planet_entity = {
					picture = pc_pd_wasteland
					entity = pd_wasteland_planet_01_entity
				}
			}
			while = {
				limit = { num_districts = { type = district_farming value > 0 } }
				remove_district = district_farming
			}
			while = {
				limit = { num_districts = { type = district_farming_uncapped value > 0 } }
				remove_district = district_farming_uncapped
			}
			remove_pd_modifier = yes
			create_message = {
				type = MESSAGE_PD_AW_WASTELAND_TYPE
				localization = MESSAGE_PD_AW_WASTELAND_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}

###Shroud Touched Planet
@pd_shroud_time = 1800
#Remove Shroud Modifier
decision_pd_aw_shroud_planet_cleanup = {
	owned_planets_only = yes
	icon = decision_resort_colony

	enactment_time = @pd_shroud_time

	potential = {
		exists = owner
		owner = {
			NOT = { has_tradition = tr_psionics_finish }
		}
		pd_aw_is_shroud_planet = yes
		OR = {
			habitable_planet_not_urban = yes
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_habitat
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_nuked
		}
	}

	allow = {
		owner = { has_technology = tech_psionic_theory }
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		remove_modifier = pd_aw_shroud_planet
		custom_tooltip = decision_pd_aw_shroud_planet_cleanup_tooltip
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						pd_is_flooded_planet = yes
						pd_aw_is_necro_planet = yes
					}
				}
				pd_aw_back_to_normal_view_effect = yes
			}
			if = {
				limit = {
					pd_is_flooded_planet = yes
				}
				IF = {
					limit = {
						is_planet_class = pc_ocean
					}
					set_planet_entity = {
						picture = pc_aquatic
						entity = aquatic_planet_01_entity
					}
					pd_remove_ocean_modifiers = yes
				}
				IF = {
					limit = {
						OR = {
							has_modifier = ocean_paradise_2
							has_modifier = ocean_paradise_hive_2
						}
					}
					set_planet_entity = {
						picture = pc_aquatic
						entity = ocean_paradise_planet_01_entity
					}
					pd_remove_ocean_modifiers = yes
				}
				IF = {
					limit = {
						is_planet_class = pc_gaia
					}
					set_planet_entity = {
						picture = pc_aquatic_hot
						entity = ocean_paradise_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_city
						entity = aquaticcity_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_relic
						entity = pd_aquatic_relic_world_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_hive
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_hive
						entity = pd_aquatic_infested_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_machine
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_machine
						entity = pd_aquatic_machine_planet_01_entity
					}
				}
			}
			if = {
				limit = {
					pd_aw_is_necro_planet = yes
				}
				IF = {
					limit = {
						OR = {
							habitable_planet_not_urban = yes
							is_planet_class = pc_nuked
						}
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_necro_city
						entity = pd_necro_city_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_necro_relic
						entity = pd_necro_relic_planet_01_entity
					}
				}
				IF = {
					limit = {
						OR = {
							is_planet_class = pc_hive
							is_planet_class = pc_machine
						}
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_planet_01_entity
					}
				}
			}
			create_message = {
				type = MESSAGE_PD_AW_SHROUD_CLEANUP_TYPE
				localization = MESSAGE_PD_AW_SHROUD_CLEANUP_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}

#Make Shroud World
decision_pd_aw_shroud_planet = {
	owned_planets_only = yes
	icon = decision_pd_aw_shroud

	enactment_time = @pd_shroud_time

	potential = {
		OR = {
			habitable_planet_not_urban = yes
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_habitat
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_nuked
		}
		exists = owner
		owner = { has_tradition = tr_psionics_finish }
		pd_aw_is_shroud_planet = no
		pd_aw_is_wasteland_planet = no
		NOT = { has_planet_flag = pd_unique_world }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			sr_zro = 750
		}
	}

	effect = {
		add_modifier = {
			modifier = pd_aw_shroud_planet
			days = -1
		}
		hidden_effect = {
			IF = {
				limit = {
					NOT = {
						pd_is_flooded_planet = yes
						pd_aw_is_necro_planet = yes
					}
				}
				IF = {
					limit = {
						habitable_planet_not_urban = yes
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_pd_shroud_ring
						entity = pd_shroud_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_habitat
					}
					set_planet_entity = {
						picture = pc_pd_shroud_habitat
						entity = "habitat_phase_03_entity"
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_shroud_city
						entity = pdshroudcity_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_shroud_relic
						entity = pdshroudrelic_planet_01_entity
					}
				}
				IF = {
					limit = {
						has_planet_flag = planet_earth
						NOT = { is_planet_class = pc_city }
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_earth_entity
					}
				}
				IF = {
					limit = {
						has_planet_flag = pdmars
						NOT = { is_planet_class = pc_city }
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_mars_entity
					}
				}
				IF = {
					limit = {
						has_planet_flag = pdvenus
						NOT = { is_planet_class = pc_city }
					}
					set_planet_entity = {
						picture = pc_pd_shroud
						entity = pdshroud_planet_venus_entity
					}
				}
			}
			IF = {
				limit = {
					pd_is_flooded_planet = yes
				}
				IF = {
					limit = {
						habitable_planet_not_urban = yes
						NOT = {
							is_planet_class = pc_gaia
						}
					}
					set_planet_entity = {
						picture = pc_aquatic_shroud
						entity = aquatic_shroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_gaia
					}
					set_planet_entity = {
						picture = pc_aquatic_shroud_hot
						entity = ocean_paradise_shroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_aquatic_shroud
						entity = pdaquatic_shroud_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_habitat
					}
					set_planet_entity = {
						picture = pc_pd_aqua_shroud_habitat
						entity = "habitat_phase_03_entity"
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_shroud_city
						entity = aquatic_shroudcity_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_aquatic_shroud_relic
						entity = pdaquatic_shroudrelic_planet_01_entity
					}
				}
			}
			IF = {
				limit = {
					pd_aw_is_necro_planet = yes
				}
				IF = {
					limit = {
						is_planet_class = pc_nuked
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud
						entity = pd_necro_shroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud
						entity = pd_necro_shroud_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud_city
						entity = pd_necro_shroud_city_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud_relic
						entity = pd_necro_shroud_relic_planet_01_entity
					}
				}
			}
			remove_pd_modifier = yes
			create_message = {
				type = MESSAGE_PD_AW_SHROUD_TYPE
				localization = MESSAGE_PD_AW_SHROUD_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}

###Necro Worlds
@pd_necro_time = 1800
#Make Shroud World
decision_pd_aw_necro_planet = {
	owned_planets_only = yes
	icon = decision_pd_aw_necro

	enactment_time = @pd_necro_time

	potential = {
		OR = {
			habitable_planet_not_urban = yes
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		exists = owner
		owner = { has_ascension_perk = ap_pd_necro_worlds }
		pd_aw_is_necro_planet = no
		pd_aw_is_wasteland_planet = no
		NOT = { has_planet_flag = pd_unique_world }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			minerals = 5000
		}
	}

	effect = {
		if = {
			limit = {
				habitable_planet_not_urban = yes
			}
			change_pc = pc_nuked
		}
		if = {
			limit = {
				OR = {
					habitable_planet_not_urban = yes
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_hive
					is_planet_class = pc_machine
					is_planet_class = pc_relic
				}
			}
			add_modifier = {
				modifier = pd_aw_necro_planet
				days = -1
			}
		}
		if = {
			limit = {
				is_planet_class = pc_city
			}
			add_modifier = {
				modifier = pd_aw_necro_city_planet
				days = -1
			}
		}
		hidden_effect = {
			IF = {
				limit = {
					NOT = {	has_modifier = pd_aw_shroud_planet }
				}
				IF = {
					limit = {
						habitable_planet_not_urban = yes
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_necro_city
						entity = pd_necro_city_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_necro_relic
						entity = pd_necro_relic_planet_01_entity
					}
				}
				IF = {
					limit = {
						OR = {
							is_planet_class = pc_hive
							is_planet_class = pc_machine
						}
					}
					set_planet_entity = {
						picture = pc_pd_necro
						entity = pd_necro_planet_01_entity
					}
				}
			}
			IF = {
				limit = {
					has_modifier = pd_aw_shroud_planet
				}
				IF = {
					limit = {
						habitable_planet_not_urban = yes
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud
						entity = pd_necro_shroud_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_ringworld_habitable
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud
						entity = pd_necro_shroud_ringworld_habitable_entity_01_entity
						graphical_culture = owner
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_city
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud_city
						entity = pd_necro_shroud_city_planet_01_entity
					}
				}
				IF = {
					limit = {
						is_planet_class = pc_relic
					}
					set_planet_entity = {
						picture = pc_pd_necro_shroud_relic
						entity = pd_necro_shroud_relic_planet_01_entity
					}
				}
			}
			remove_pd_modifier = yes
			create_message = {
				type = MESSAGE_PD_AW_NECRO_TYPE
				localization = MESSAGE_PD_AW_NECRO_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}

#Remove Necro Modifier
decision_pd_aw_necro_planet_cleanup = {
	owned_planets_only = yes
	icon = decision_pd_aw_necro

	enactment_time = @pd_necro_time

	potential = {
		OR = {
			habitable_planet_not_urban = yes
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_city
			is_planet_class = pc_relic
			is_planet_class = pc_hive
			is_planet_class = pc_machine
			is_planet_class = pc_nuked
		}
		exists = owner
		owner = { NOT = { has_ascension_perk = ap_pd_necro_worlds } }
		pd_aw_is_necro_planet = yes
		pd_aw_is_wasteland_planet = no
		NOT = { has_planet_flag = pd_unique_world }
	}

	allow = {
	}

	resources = {
		category = decisions
		cost = {
			influence = 50
			energy = 5000
		}
	}

	effect = {
		hidden_effect = {
			IF = {
				limit = {
					pd_aw_is_necro_planet = yes
				}
				remove_modifier = pd_aw_necro_planet
				remove_modifier = pd_aw_necro_city_planet
				remove_modifier = pd_necro_planet
				IF = {
					limit = {
						pd_aw_is_shroud_planet = yes
					}
					IF = {
						limit = {
							OR = {
								habitable_planet_not_urban = yes
								is_planet_class = pc_nuked
							}
						}
						set_planet_entity = {
							picture = pc_pd_shroud
							entity = pdshroud_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_ringworld_habitable
						}
						set_planet_entity = {
							picture = pc_pd_shroud_ring
							entity = pd_shroud_ringworld_habitable_entity_01_entity
							graphical_culture = owner
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_habitat
						}
						set_planet_entity = {
							picture = pc_pd_shroud_habitat
							entity = "habitat_phase_03_entity"
							graphical_culture = owner
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_city
						}
						set_planet_entity = {
							picture = pc_pd_necro_shroud_city
							entity = pd_necro_shroud_city_planet_01_entity
						}
					}
					IF = {
						limit = {
							is_planet_class = pc_relic
						}
						set_planet_entity = {
							picture = pc_pd_shroud_relic
							entity = pdshroudrelic_planet_01_entity
						}
					}
					IF = {
						limit = {
							has_planet_flag = planet_earth
							NOT = { is_planet_class = pc_city }
						}
						set_planet_entity = {
							picture = pc_pd_shroud
							entity = pdshroud_planet_earth_entity
						}
					}
					IF = {
						limit = {
							has_planet_flag = pdmars
							NOT = { is_planet_class = pc_city }
						}
						set_planet_entity = {
							picture = pc_pd_shroud
							entity = pdshroud_planet_mars_entity
						}
					}
					IF = {
						limit = {
							has_planet_flag = pdvenus
							NOT = { is_planet_class = pc_city }
						}
						set_planet_entity = {
							picture = pc_pd_shroud
							entity = pdshroud_planet_venus_entity
						}
					}
				}
				IF = {
					limit = {
						NOT = { pd_aw_is_shroud_planet = yes }
					}
					pd_aw_back_to_normal_view_effect = yes
				}
			}
			create_message = {
				type = MESSAGE_PD_AW_NECRO_CLEANUP_TYPE
				localization = MESSAGE_PD_AW_NECRO_CLEANUP_DESC
				days = 20
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}

	ai_weight = {
		weight = 10
	}
}
# Correct Earth entity based on planet class
set_earth_entity = {
	if = {
		limit = {
			is_starting_planet_type = yes
		}
		switch = {
			trigger = is_planet_class
			pc_desert = {
				set_planet_entity = {
					entity = desert_planet_earth_entity
				}
			}
			pc_arid = {
				set_planet_entity = {
					entity = arid_planet_earth_entity
				}
			}
			pc_savannah = {
				set_planet_entity = {
					entity = savannah_planet_earth_entity
				}
			}
			pc_tropical = {
				set_planet_entity = {
					entity = tropical_planet_earth_entity
				}
			}
			pc_ocean = {
				set_planet_entity = {
					entity = ocean_planet_earth_entity
				}
			}
			pc_continental = {
				set_planet_entity = {
					#entity = continental_planet_earth_entity
					entity = atw_earth_entity
				}
			}
			pc_tundra = {
				set_planet_entity = {
					entity = tundra_planet_earth_entity
				}
			}
			pc_arctic = {
				set_planet_entity = {
					#entity = arctic_planet_earth_entity
					entity = atw_snowball_earth_entity
				}
			}
			pc_alpine = {
				set_planet_entity = {
					entity = alpine_planet_earth_entity
				}
			}
			default = {
				set_planet_entity = {
					entity = atw_earth_entity
				}
			}
		}
	}
}
# Correct Mars entity based on planet class
set_mars_entity = {
	if = {
		limit = {
			is_starting_planet_type = yes
		}
		switch = {
			trigger = is_planet_class
			pc_desert = {
				set_planet_entity = {
					entity = desert_planet_mars_entity					
				}
			}
			pc_arid = {
				set_planet_entity = {
					#entity = arid_planet_mars_entity
					entity = dry_terrestrial_planet_mars_entity
				}
			}
			pc_savannah = {
				set_planet_entity = {
					#entity = savannah_planet_mars_entity
					entity = dry_sub_terrestrial_planet_mars_entity
				}
			}
			pc_tropical = {
				set_planet_entity = {
					entity = tropical_planet_mars_entity
				}
			}
			pc_ocean = {
				set_planet_entity = {
					entity = ocean_planet_mars_entity
				}
			}
			pc_continental = {
				set_planet_entity = {
					#entity = continental_planet_mars_entity
					entity = temperate_terrestrial_planet_mars_entity
				}
			}
			pc_tundra = {
				set_planet_entity = {
					entity = tundra_planet_mars_entity
				}
			}
			pc_arctic = {
				set_planet_entity = {
					#entity = arctic_planet_mars_entity
					entity = frigid_terrestrial_planet_mars_entity
				}
			}
			pc_alpine = {
				set_planet_entity = {
					entity = alpine_planet_mars_entity
				}
			}
			default = {
				set_planet_entity = {
					entity = arid_planet_mars_entity
				}
			}
		}
	}
}

# TOMB WORLD CLASS FIXES
nuke_pre_ftls_effect = {
	every_owned_pop = {
		kill_pop = yes
	}
	destroy_colony = yes
	set_planet_flag = pre_ftls_nuked_themselves
	if = {
		limit = {
			is_artificial = no
		}
		change_pc = pc_nuked
		roll_tomb = yes # NEW
		reroll_planet = yes
		remove_all_buildings = yes
		add_deposit = d_metal_boneyard
		set_planet_flag = nuked_planet_anomalies_disabled
	}
}
nuke_pre_ftls_toxic_effect = {
	every_owned_pop = {
		kill_pop = yes
	}
	destroy_colony = yes
	if = {
		limit = {
			is_artificial = no
		}
		change_pc = pc_toxic
		roll_hothouse_toxic = yes # NEW
		set_deposit = d_society_3
		if = {
			limit = {
				has_toxoids = yes
			}
			set_planet_flag = toxic_terraforming_candidate
			add_modifier = {
				modifier = toxic_terraforming_candidate
			}
		}
	}
	reset_planet = yes
	add_modifier = {
		modifier = "nuclear_devastation"
		days = -1
	}
}
# (Pre-FTL) planet scope | owner = pre-FTL country
nuke_pre_ftls_stone_age_effect = {
	every_owned_pop = {
		limit = { is_robotic_species = yes }
		kill_pop = yes
	}
	while = {
		limit = {
			num_pops > 2
		}
		random_owned_pop = {
			kill_pop = yes
		}
	}
	owner = {
		if = {
			limit = {
				NOT = {
					has_pre_ftl_age = stone_age
				}
			}
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = stone_age
			}
		}
	}
	if = {
		limit = {
			is_artificial = no
		}
		owner = {
			set_origin = origin_post_apocalyptic
			# Propagate a new, 'Survivor' Trait species based on the existing pre-FTL one
			random_owned_pop = {
				limit = { is_exact_same_species = prev }
				create_nuked_species_mod = yes
				species = { save_event_target_as = new_main_species }
			}
			change_dominant_species = { species = event_target:new_main_species }
			set_awareness = 0
		}
		change_pc = pc_nuked
		roll_tomb = yes # NEW
		reroll_planet = yes
		owner = {
			add_pre_ftl_buildings = yes
		}
		add_deposit = d_metal_boneyard
		set_planet_flag = nuked_planet_anomalies_disabled
	}
}
# Removes all life-related planet modifiers when nuking a planet.
tomb_world_modifier_cleanup = {
	remove_modifier = "natural_beauty"
	remove_modifier = "atmospheric_aphrodisiac"
	remove_modifier = "atmospheric_hallucinogen"
	remove_modifier = "lush_planet"
	remove_modifier = "dangerous_wildlife"
	remove_modifier = "planet_myrmeku_attacks"
	remove_modifier = "planet_myrmeku_seal_colony"
	remove_modifier = "planet_myrmeku_upgrade_robots"
	remove_modifier = "planet_myrmeku_pest_control"
	remove_modifier = "planet_myrmeku_lured"
	# New: lets also roll the proper modifiers for a Tomb class
	roll_tomb = yes
}